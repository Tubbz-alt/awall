--[[
Iptables file dumper for Alpine Wall
Copyright (C) 2012 Kaarle Ritvanen
Licensed under the terms of GPL2
]]--


module(..., package.seeall)

require 'lpc'

require 'awall.util'
contains = awall.util.contains

local families = {inet={cmd='iptables-restore', file='rules-save'},
		  inet6={cmd='ip6tables-restore', file='rules6-save'}}

local builtin = {'INPUT', 'FORWARD', 'OUTPUT',
		 'PREROUTING', 'POSTROUTING'}

function reset()
   config = {}
   setmetatable(config,
		{__index=function(t, k)
			    t[k] = {}
			    setmetatable(t[k], getmetatable(t))
			    return t[k]
			 end})
end
reset()

local function dumpfile(family, iptfile)
   iptfile:write('# '..families[family].file..' generated by awall\n')
   for tbl, chains in pairs(config[family]) do
      iptfile:write('*'..tbl..'\n')
      for chain, rules in pairs(chains) do
	 iptfile:write(':'..chain..' '..(contains(builtin, chain) and
				      'DROP' or '-')..' [0:0]\n')
      end
      for chain, rules in pairs(chains) do
	 for i, rule in ipairs(rules) do
	    iptfile:write('-A '..chain..' '..rule..'\n')
	 end
      end
      iptfile:write('COMMIT\n')
   end
end

function test()
   for family, tbls in pairs(config) do
      local pid, stdin = lpc.run(families[family].cmd, '-t')
      dumpfile(family, stdin)
      stdin:close()
      assert(lpc.wait(pid) == 0)
   end
end

function dump(dir)
   for family, tbls in pairs(config) do
      dumpfile(family, io.output(dir..'/'..families[family].file))
   end
end
